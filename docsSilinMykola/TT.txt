Техническое задание

Написать приложение для агрегации новостей с различных источников  с возможностью 
сохранения предпочтений (для авторизированных пользователей) и генерации новостей на основе предпочтений.

1. Составление БД для хранения информации  и её расширение в случае добавления функционала.
	Рассмотреть возможные схемы приложения и варианты БД (MySQl mongoDB).
	
2. Подключение Yii2, создание представления приложения согласно MVC.

3. Выбор средств для парсинга. Создание парсера сайтов на различные тематики.
	3.1 Парссим с помощью PHPJQuery, cURL, PhantomJs.
	3.2 Обновление категорий rss сайта-источника в синонимы в таблице категорий БД. Синонимы: т.к. у каждого новостного сайта категории называются по разному, мы делаем свою структуру категорий и для каждой нашей категории добавляем список синонимов - названий категорий у сайтов-источников, которые будут попадать в данную категорию.
	3.3 Группировка результата парсинга по категориям.
	3.4 Автоматическая генерация тегов через анализ текста.
	3.5 Формирование общей новостной ленты / вывод отдельной статьи.


4. Создание админки с возможностью добавления сайтов для парсинга и выбора методов парсинга. Сделать конфигурационный сетап при добавлении в список нового сайта для парсинга.

5. Создание авторизации на сайте для пользователей, сохранение предпочтений и истории посещений.
	5.1 Регистрация, уровни доступа.
	5.2* Комментарии.
	5.3 Поиск (по тегам, по названию, по словам), выборки, сортировки и т.д.
6. Автаматическое добавление тегов - анализ текста на повторяющиеся слова.
7.* Добавление геолокации и выбора новостей в зависимости от локации.
	7.1 Определение координат пользователя.
	7.2 Формирование индивидуальной ленты новостей для незарегистрированного пользователя с привязкой к геолокации.
	7.3 Формирование индивидуальной ленты новостей для зарегистрированного пользователя с привязкой к геолокации + привязка к предпочтениям (история посещений и счетчик тегов).
